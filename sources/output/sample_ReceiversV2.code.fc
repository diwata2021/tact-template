#pragma version =0.4.3;
#pragma allow-post-modification;
#pragma compute-asm-ltr;

#include "sample_ReceiversV2.headers.fc";
#include "sample_ReceiversV2.stdlib.fc";
#include "sample_ReceiversV2.constants.fc";
#include "sample_ReceiversV2.storage.fc";

;;
;; Contract ReceiversV2 functions
;;

(int) $ReceiversV2$_contract_init() impure inline_ref {
    var (($self'val)) = (null());
    $self'val = 0;
    return ($self'val);
}

((int), int) $ReceiversV2$_fun_value((int) $self) impure inline_ref {
    var (($self'val)) = $self;
    return (($self'val), $self'val);
}

;;
;; Receivers of a Contract ReceiversV2
;;

(((int)), ()) $ReceiversV2$_internal_binary_Add((int) $self, (int) $msg) impure inline {
    var ($self'val) = $self;
    var ($msg'amount) = $msg;
    $self'val = ($self'val + $msg'amount);
    ($self'val)~$ReceiversV2$_fun_reply(__gen_cell_comment_4058e71b008c738cd84bfc91966d72a4e16516ecacfe8123481e917883a128a4());
    return (($self'val), ());
}

(((int)), ()) $ReceiversV2$_internal_binary_Subtract((int) $self, (int) $msg) impure inline {
    var ($self'val) = $self;
    var ($msg'amount) = $msg;
    $self'val = ($self'val - $msg'amount);
    ($self'val)~$ReceiversV2$_fun_reply(__gen_cell_comment_08b4d167a3432fe992233e3588b4aa1e10311f2b724f07c880765970095f5652());
    return (($self'val), ());
}

(((int)), ()) $ReceiversV2$_internal_binary_Multiply((int) $self, (int) $msg) impure inline {
    var ($self'val) = $self;
    var ($msg'amount) = $msg;
    $self'val = ($self'val * $msg'amount);
    ($self'val)~$ReceiversV2$_fun_reply(__gen_cell_comment_0eed6a93ab1679405269c2e7f664ae7acbb5ab0a5301e62a83682e0e9cca6fce());
    return (($self'val), ());
}

(((int)), ()) $ReceiversV2$_internal_binary_Divide((int) $self, (int) $msg) impure inline {
    var ($self'val) = $self;
    var ($msg'amount) = $msg;
    if (($msg'amount == 0)) {
        ($self'val)~$ReceiversV2$_fun_reply(__gen_cell_comment_8c3ce8e05885ce575f1fa0ae4c7453394f1b073f795090b158bc9712e562bb78());
    }
    $self'val = ($self'val / $msg'amount);
    ($self'val)~$ReceiversV2$_fun_reply(__gen_cell_comment_184e563e505e90647804807de2f4ed0370bde7b554b5430f2a835cdfa6d7bcd9());
    return (($self'val), ());
}

(((int)), ()) $ReceiversV2$_internal_binary_MultiMath((int) $self, (int, int, int, int) $msg) impure inline {
    var ($self'val) = $self;
    var ($msg'add, $msg'subtract, $msg'multiply, $msg'divide) = $msg;
    $self'val = ($self'val + $msg'add);
    $self'val = ($self'val - $msg'subtract);
    $self'val = ($self'val * $msg'multiply);
    if (($msg'divide != 0)) {
        $self'val = ($self'val / $msg'divide);
    }
    return (($self'val), ());
}

((int), ()) $ReceiversV2$_internal_text_c4f8d72312edfdef5b7bec7833bdbb162d1511bd78a912aed0f2637af65572ae((int) $self) impure inline {
    var ($self'val) = $self;
    $self'val = ($self'val + 1);
    return (($self'val), ());
}

((int), ()) $ReceiversV2$_internal_text_85915b1bf5943fd2853bb660338acacfae39d1f735549cef922255a9945acc3e((int) $self) impure inline {
    var ($self'val) = $self;
    $self'val = ($self'val - 1);
    return (($self'val), ());
}

(((int)), ()) $ReceiversV2$_internal_binary_Deploy((int) $self, (int) $deploy) impure inline {
    var ($self'val) = $self;
    var ($deploy'queryId) = $deploy;
    ($self'val)~$ReceiversV2$_fun_notify($DeployOk$_store_cell($DeployOk$_constructor_queryId($deploy'queryId)));
    return (($self'val), ());
}

;;
;; Get methods of a Contract ReceiversV2
;;

_ %value() method_id(121536) {
    var self = $ReceiversV2$_contract_load();
    var res = self~$ReceiversV2$_fun_value();
    return res;
}

_ supported_interfaces() method_id {
    return (
        "org.ton.introspection.v0"H >> 128,
        "org.ton.abi.ipfs.v0"H >> 128,
        "org.ton.deploy.lazy.v0"H >> 128,
        "org.ton.chain.workchain.v0"H >> 128
    );
}

_ get_abi_ipfs() method_id {
    return "ipfs://QmcKYScCGBVFWU1ze6292Ck4vhvrVAi3LWfcoQdS2h6i9A";
}

_ lazy_deployment_completed() method_id {
    return get_data().begin_parse().load_int(1);
}

;;
;; Routing of a Contract ReceiversV2
;;

((int), int) $ReceiversV2$_contract_router_internal((int) self, int msg_bounced, slice in_msg) impure inline_ref {
    ;; Handle bounced messages
    if (msg_bounced) {
        return (self, true);
    }
    
    ;; Parse incoming message
    int op = 0;
    if (slice_bits(in_msg) >= 32) {
        op = in_msg.preload_uint(32);
    }
    
    
    ;; Receive Add message
    if (op == 2278832834) {
        var msg = in_msg~$Add$_load();
        self~$ReceiversV2$_internal_binary_Add(msg);
        return (self, true);
    }
    
    ;; Receive Subtract message
    if (op == 1552846265) {
        var msg = in_msg~$Subtract$_load();
        self~$ReceiversV2$_internal_binary_Subtract(msg);
        return (self, true);
    }
    
    ;; Receive Multiply message
    if (op == 2185829316) {
        var msg = in_msg~$Multiply$_load();
        self~$ReceiversV2$_internal_binary_Multiply(msg);
        return (self, true);
    }
    
    ;; Receive Divide message
    if (op == 2091152479) {
        var msg = in_msg~$Divide$_load();
        self~$ReceiversV2$_internal_binary_Divide(msg);
        return (self, true);
    }
    
    ;; Receive MultiMath message
    if (op == 1496000302) {
        var msg = in_msg~$MultiMath$_load();
        self~$ReceiversV2$_internal_binary_MultiMath(msg);
        return (self, true);
    }
    
    ;; Receive Deploy message
    if (op == 2490013878) {
        var msg = in_msg~$Deploy$_load();
        self~$ReceiversV2$_internal_binary_Deploy(msg);
        return (self, true);
    }
    
    ;; Text Receivers
    if (op == 0) {
        var text_op = slice_hash(in_msg);
        
        ;; Receive "increment" message
        if (text_op == 0xc4f8d72312edfdef5b7bec7833bdbb162d1511bd78a912aed0f2637af65572ae) {
            self~$ReceiversV2$_internal_text_c4f8d72312edfdef5b7bec7833bdbb162d1511bd78a912aed0f2637af65572ae();
            return (self, true);
        }
        
        ;; Receive "decrement" message
        if (text_op == 0x85915b1bf5943fd2853bb660338acacfae39d1f735549cef922255a9945acc3e) {
            self~$ReceiversV2$_internal_text_85915b1bf5943fd2853bb660338acacfae39d1f735549cef922255a9945acc3e();
            return (self, true);
        }
    }
    
    return (self, false);
}

() recv_internal(int msg_value, cell in_msg_cell, slice in_msg) impure {
    
    ;; Context
    var cs = in_msg_cell.begin_parse();
    var msg_flags = cs~load_uint(4);
    var msg_bounced = -(msg_flags & 1);
    slice msg_sender_addr = __tact_verify_address(cs~load_msg_addr());
    __tact_context = (msg_bounced, msg_sender_addr, msg_value, cs);
    __tact_context_sender = msg_sender_addr;
    
    ;; Load contract data
    var self = $ReceiversV2$_contract_load();
    
    ;; Handle operation
    int handled = self~$ReceiversV2$_contract_router_internal(msg_bounced, in_msg);
    
    ;; Throw if not handled
    throw_unless(130, handled);
    
    ;; Persist state
    $ReceiversV2$_contract_store(self);
}
